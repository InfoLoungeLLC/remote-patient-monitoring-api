getCenters:
  handler: src/lambda/handler.getCenters
  name: "remote-patient-monitoring-getCenters-${self:provider.stage}"
  description: "This function is test app."
  role: "arn:aws:iam::#{AWS::AccountId}:role/GetCentersRole-${self:provider.stage}"
  environment:
    CENTER_TABLE_NAME: RemotePatientMonitoringCenterTable-${self:provider.stage}
getCenter:
  handler: src/lambda/handler.getCenter
  name: "remote-patient-monitoring-getCenter-${self:provider.stage}"
  description: "This function is test app."
  role: "arn:aws:iam::#{AWS::AccountId}:role/GetCenterRole-${self:provider.stage}"
  environment:
    CENTER_TABLE_NAME: RemotePatientMonitoringCenterTable-${self:provider.stage}
postCenter:
  handler: src/lambda/handler.postCenter
  name: "remote-patient-monitoring-postCenter-${self:provider.stage}"
  description: "This function is test app."
  role: "arn:aws:iam::#{AWS::AccountId}:role/PostCenterRole-${self:provider.stage}"
  environment:
    CENTER_TABLE_NAME: RemotePatientMonitoringCenterTable-${self:provider.stage}
putCenter:
  handler: src/lambda/handler.putCenter
  name: "remote-patient-monitoring-putCenter-${self:provider.stage}"
  description: "This function is test app."
  role: "arn:aws:iam::#{AWS::AccountId}:role/PutCenterRole-${self:provider.stage}"
  environment:
    CENTER_TABLE_NAME: RemotePatientMonitoringCenterTable-${self:provider.stage}
