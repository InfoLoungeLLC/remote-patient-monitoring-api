openapi: 3.0.1
info:
  title: Remote Patient Monitoring System API
  description: 遠隔療養者モニタリングシステムのAPIです。
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: hal@code4japan.org
  license:
    name: MIT License
    url: >-
      https://github.com/codeforjapan/remote-patient-monitoring-api/blob/main/LICENSE
  version: 1.0.0
servers:
  - url: /
paths:
  /api/center/:
    get:
      tags:
        - Center
      summary: 保健所を取得する
      description: 全ての保健所を取得
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    centerId:
                      type: string
                    centerName:
                      type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-getCenters-dev/invocations
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
    post:
      tags:
        - Center
      summary: 新たに保健所を作成する
      description: 指定された名前で、新たに保健所を作成します。
      security:
        - APIGatewayAuthorizer: []
      requestBody:
        description: center model which you want to create.
        content:
          application/json:
            schema:
              type: object
              properties:
                centerName:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  centerId:
                    type: string
                  centerName:
                    type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-postCenter-dev/invocations
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: body
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
  '/api/center/{centerId}':
    get:
      tags:
        - Center
      summary: 保健所の取得
      description: '指定された{centerId}を持つ保健所情報を返します'
      parameters:
        - name: centerId
          in: path
          description: 取得したい保健所のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  centerId:
                    type: string
                  centerName:
                    type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-getCenter-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
    put:
      tags:
        - Center
      summary: 保健所の更新
      description: 指定されたcenterIdの保健所情報を更新します
      security:
        - APIGatewayAuthorizer: []
      parameters:
        - name: centerId
          in: path
          description: 更新したい保健所のID
          required: true
          schema:
            type: string
      requestBody:
        description: center model which you want to update.
        content:
          application/json:
            schema:
              type: object
              properties:
                centerName:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  centerId:
                    type: string
                  centerName:
                    type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-putCenter-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: body
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      parameters:
        - name: centerId
          in: path
          description: 取得したい保健所のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
  '/api/center/{centerId}/observer/':
    get:
      tags:
        - Observer
      summary: 指定の保健所に所属する観察者を表示
      description: '指定された{centerId}に所属する観察者の一覧を表示します'
      security:
        - APIGatewayAuthorizer: []
      parameters:
        - name: centerId
          in: path
          description: 取得したい観察者が所属する保健所のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    observerId:
                      type: string
                    observerName:
                      type: string
                    manageCenters:
                      type: array
                      items:
                        type: object
                        properties:
                          centerId:
                            type: string
                          centerName:
                            type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-getObserver-by-centerid-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      parameters:
        - name: centerId
          in: path
          description: 取得したい保健所のID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
    post:
      tags:
        - Observer
      summary: 新たに観察者を作成する
      description: 指定された保健所に対し、新たに観察者を作成します。
      security:
        - APIGatewayAuthorizer: []
      parameters:
        - name: centerId
          in: path
          description: 作成したい観察者が所属する保健所のID
          required: true
          schema:
            type: string
      requestBody:
        description: observer model which you want to create.
        content:
          application/json:
            schema:
              type: object
              properties:
                observerId:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  observerId:
                    type: string
                  observerName:
                    type: string
                  manageCenters:
                    type: array
                    items:
                      type: object
                      properties:
                        centerId:
                          type: string
                        centerName:
                          type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-postObserver-dev/invocations
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: body
  '/api/observer/{observerId}':
    get:
      tags:
        - Observer
      summary: 観察者の取得
      description: '指定された{observerId}を持つ観察者情報を返します'
      security:
        - APIGatewayAuthorizer: []
      parameters:
        - name: observerId
          in: path
          description: 取得したい観察者のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  observerId:
                    type: string
                  observerName:
                    type: string
                  manageCenters:
                    type: array
                    items:
                      type: object
                      properties:
                        centerId:
                          type: string
                        centerName:
                          type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-getObserver-by-id-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
    put:
      tags:
        - Observer
      summary: 観察者の更新
      description: 指定されたobserverIdの観察者情報を更新します
      security:
        - APIGatewayAuthorizer: []
      parameters:
        - name: observerId
          in: path
          description: 更新したい観察者のID
          required: true
          schema:
            type: string
      requestBody:
        description: observer model which you want to update.
        content:
          application/json:
            schema:
              type: object
              properties:
                observerName:
                  type: string
                manageCenters:
                  type: array
                  items:
                    type: object
                    properties:
                      centerId:
                        type: string
                      centerName:
                        type: string
        required: true
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  observerId:
                    type: string
                  observerName:
                    type: string
                  manageCenters:
                    type: array
                    items:
                      type: object
                      properties:
                        centerId:
                          type: string
                        centerName:
                          type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-putObserver-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: body
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      parameters:
        - name: observerId
          in: path
          description: 取得したい観察者のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
  '/api/center/{centerId}/patient/':
    get:
      tags:
        - Patient
      summary: 指定の保健所に所属する療養者を表示
      description: >-
        指定された{centerId}に所属する療養者の一覧を表示します。並び順は、登録が新しい順です。閣僚容赦の持つ病状報告は、最新10件のみ入っています。
      security:
        - APIGatewayAuthorizer: []
      parameters:
        - name: centerId
          in: path
          description: 取得したい療養者が所属する保健所のID
          required: true
          schema:
            type: string
        - name: includeall
          in: query
          description: ダッシュボードに表示するかどうかのフラグがオフのユーザも取得する。省略すると false
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    patientId:
                      type: string
                    centerId:
                      type: string
                    policy_accepted:
                      type: string
                      format: date-time
                    phone:
                      type: string
                    display:
                      type: boolean
                    statuses:
                      type: array
                      items:
                        type: object
                        properties:
                          patientId:
                            type: string
                          centerId:
                            type: string
                          created:
                            type: string
                            format: date-time
                          SpO2:
                            type: integer
                            format: int32
                          body_temperature:
                            type: number
                            format: float
                          pulse:
                            type: integer
                            format: int32
                          symptom:
                            type: object
                            properties:
                              patientId:
                                type: string
                              couth:
                                type: boolean
                              phiegm:
                                type: boolean
                              suffocation:
                                type: boolean
                              headache:
                                type: boolean
                              sore_throat:
                                type: boolean
                              remarks:
                                type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-getPatient-by-centerid-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      parameters:
        - name: centerId
          in: path
          description: 取得したい保健所のID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
    post:
      tags:
        - Patient
      summary: 新たに療養者を作成する
      description: 指定された保健所に対し、新たに療養者を作成します。
      security:
        - APIGatewayAuthorizer: []
      parameters:
        - name: centerId
          in: path
          description: 作成したい療養者が所属する保健所のID
          required: true
          schema:
            type: string
      requestBody:
        description: 新たに療養者を登録する。システムで自動でログインID及びパスワードを生成して返す。
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                display:
                  type: boolean
        required: true
      responses:
        '201':
          description: Creted
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  loginId:
                    type: string
                  password:
                    type: string
                  patientId:
                    type: string
                  centerId:
                    type: string
                  policy_accepted:
                    type: string
                    format: date-time
                  phone:
                    type: string
                  display:
                    type: boolean
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-postPatient-dev/invocations
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: body
  '/api/patient/{patientId}':
    get:
      tags:
        - Patient
      summary: 療養者の取得
      description: '指定された{PatientId}を持つ療養者情報を返します'
      security:
        - APIGatewayAuthorizer: []
      parameters:
        - name: patientId
          in: path
          description: 取得したい療養者のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  patientId:
                    type: string
                  centerId:
                    type: string
                  policy_accepted:
                    type: string
                    format: date-time
                  phone:
                    type: string
                  display:
                    type: boolean
                  statuses:
                    type: array
                    items:
                      type: object
                      properties:
                        patientId:
                          type: string
                        centerId:
                          type: string
                        created:
                          type: string
                          format: date-time
                        SpO2:
                          type: integer
                          format: int32
                        body_temperature:
                          type: number
                          format: float
                        pulse:
                          type: integer
                          format: int32
                        symptom:
                          type: object
                          properties:
                            patientId:
                              type: string
                            couth:
                              type: boolean
                            phiegm:
                              type: boolean
                            suffocation:
                              type: boolean
                            headache:
                              type: boolean
                            sore_throat:
                              type: boolean
                            remarks:
                              type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-getPatient-by-id-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
    put:
      tags:
        - Patient
      summary: 療養者の更新
      description: 指定されたPatientIdの療養者情報を更新します
      security:
        - APIGatewayAuthorizer: []
      parameters:
        - name: PatientId
          in: path
          description: 更新したい療養者のID
          required: true
          schema:
            type: string
      requestBody:
        description: Patient model which you want to update.
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                display:
                  type: boolean
        required: true
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  patientId:
                    type: string
                  centerId:
                    type: string
                  policy_accepted:
                    type: string
                    format: date-time
                  phone:
                    type: string
                  display:
                    type: boolean
                  statuses:
                    type: array
                    items:
                      type: object
                      properties:
                        patientId:
                          type: string
                        centerId:
                          type: string
                        created:
                          type: string
                          format: date-time
                        SpO2:
                          type: integer
                          format: int32
                        body_temperature:
                          type: number
                          format: float
                        pulse:
                          type: integer
                          format: int32
                        symptom:
                          type: object
                          properties:
                            patientId:
                              type: string
                            couth:
                              type: boolean
                            phiegm:
                              type: boolean
                            suffocation:
                              type: boolean
                            headache:
                              type: boolean
                            sore_throat:
                              type: boolean
                            remarks:
                              type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-patient-monitoring-putPatient-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: body
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      parameters:
        - name: PatientId
          in: path
          description: 取得したい療養者のID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
  '/api/patient/{patientId}/statuses':
    get:
      tags:
        - Status
      summary: 指定の保健所に所属する症状報告を表示
      description: '指定された{patientId}に所属する症状報告の一覧を表示します'
      security:
        - APIGatewayAuthorizer: []
      parameters:
        - name: patientId
          in: path
          description: 取得したい症状報告の対象となる療養者ID
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: 取得件数
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          description: オフセット件数
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    patientId:
                      type: string
                    centerId:
                      type: string
                    created:
                      type: string
                      format: date-time
                    SpO2:
                      type: integer
                      format: int32
                    body_temperature:
                      type: number
                      format: float
                    pulse:
                      type: integer
                      format: int32
                    symptom:
                      type: object
                      properties:
                        patientId:
                          type: string
                        couth:
                          type: boolean
                        phiegm:
                          type: boolean
                        suffocation:
                          type: boolean
                        headache:
                          type: boolean
                        sore_throat:
                          type: boolean
                        remarks:
                          type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-Status-monitoring-getStatus-by-centerid-dev/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
    options:
      tags:
        - CORS
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      parameters:
        - name: centerId
          in: path
          description: 取得したい保健所のID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
    post:
      tags:
        - Status
      summary: 新たに症状報告を作成する
      description: 指定された療養者に対し、新たに症状報告を作成します。
      security:
        - APIGatewayAuthorizer: []
      parameters:
        - name: patientId
          in: path
          description: 作成したい症状報告を報告する療養者ID
          required: true
          schema:
            type: string
      requestBody:
        description: 症状情報を登録する。Symptom のデータも合わせて登録する。
        content:
          application/json:
            schema:
              type: object
              properties:
                SpO2:
                  type: integer
                  format: int32
                body_temperature:
                  type: number
                  format: float
                pulse:
                  type: integer
                  format: int32
                symptom:
                  type: object
                  properties:
                    couth:
                      type: boolean
                    phiegm:
                      type: boolean
                    suffocation:
                      type: boolean
                    headache:
                      type: boolean
                    sore_throat:
                      type: boolean
                    remarks:
                      type: string
        required: true
      responses:
        '201':
          description: Creted
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  patientId:
                    type: string
                  centerId:
                    type: string
                  created:
                    type: string
                    format: date-time
                  SpO2:
                    type: integer
                    format: int32
                  body_temperature:
                    type: number
                    format: float
                  pulse:
                    type: integer
                    format: int32
                  symptom:
                    type: object
                    properties:
                      patientId:
                        type: string
                      couth:
                        type: boolean
                      phiegm:
                        type: boolean
                      suffocation:
                        type: boolean
                      headache:
                        type: boolean
                      sore_throat:
                        type: boolean
                      remarks:
                        type: string
        '400':
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
        '500':
          description: Internal error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                  errorMessage:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          BAD.*:
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
          INT.*:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        uri: >-
          arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:remote-Status-monitoring-postStatus-dev/invocations
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
      x-codegen-request-body-name: body
components:
  schemas:
    Center:
      type: object
      properties:
        centerId:
          type: string
        centerName:
          type: string
    consumeCenter:
      type: object
      properties:
        centerName:
          type: string
    Centers:
      type: array
      items:
        type: object
        properties:
          centerId:
            type: string
          centerName:
            type: string
    Observer:
      type: object
      properties:
        observerId:
          type: string
        observerName:
          type: string
        manageCenters:
          type: array
          items:
            type: object
            properties:
              centerId:
                type: string
              centerName:
                type: string
    Observers:
      type: array
      items:
        type: object
        properties:
          observerId:
            type: string
          observerName:
            type: string
          manageCenters:
            type: array
            items:
              type: object
              properties:
                centerId:
                  type: string
                centerName:
                  type: string
    Patient:
      type: object
      properties:
        patientId:
          type: string
        centerId:
          type: string
        policy_accepted:
          type: string
          format: date-time
        phone:
          type: string
        display:
          type: boolean
        statuses:
          type: array
          items:
            type: object
            properties:
              patientId:
                type: string
              centerId:
                type: string
              created:
                type: string
                format: date-time
              SpO2:
                type: integer
                format: int32
              body_temperature:
                type: number
                format: float
              pulse:
                type: integer
                format: int32
              symptom:
                type: object
                properties:
                  patientId:
                    type: string
                  couth:
                    type: boolean
                  phiegm:
                    type: boolean
                  suffocation:
                    type: boolean
                  headache:
                    type: boolean
                  sore_throat:
                    type: boolean
                  remarks:
                    type: string
    Patients:
      type: array
      items:
        type: object
        properties:
          patientId:
            type: string
          centerId:
            type: string
          policy_accepted:
            type: string
            format: date-time
          phone:
            type: string
          display:
            type: boolean
          statuses:
            type: array
            items:
              type: object
              properties:
                patientId:
                  type: string
                centerId:
                  type: string
                created:
                  type: string
                  format: date-time
                SpO2:
                  type: integer
                  format: int32
                body_temperature:
                  type: number
                  format: float
                pulse:
                  type: integer
                  format: int32
                symptom:
                  type: object
                  properties:
                    patientId:
                      type: string
                    couth:
                      type: boolean
                    phiegm:
                      type: boolean
                    suffocation:
                      type: boolean
                    headache:
                      type: boolean
                    sore_throat:
                      type: boolean
                    remarks:
                      type: string
    Statuses:
      type: array
      items:
        type: object
        properties:
          patientId:
            type: string
          centerId:
            type: string
          created:
            type: string
            format: date-time
          SpO2:
            type: integer
            format: int32
          body_temperature:
            type: number
            format: float
          pulse:
            type: integer
            format: int32
          symptom:
            type: object
            properties:
              patientId:
                type: string
              couth:
                type: boolean
              phiegm:
                type: boolean
              suffocation:
                type: boolean
              headache:
                type: boolean
              sore_throat:
                type: boolean
              remarks:
                type: string
    Status:
      type: object
      properties:
        patientId:
          type: string
        centerId:
          type: string
        created:
          type: string
          format: date-time
        SpO2:
          type: integer
          format: int32
        body_temperature:
          type: number
          format: float
        pulse:
          type: integer
          format: int32
        symptom:
          type: object
          properties:
            patientId:
              type: string
            couth:
              type: boolean
            phiegm:
              type: boolean
            suffocation:
              type: boolean
            headache:
              type: boolean
            sore_throat:
              type: boolean
            remarks:
              type: string
  securitySchemes:
    APIGatewayAuthorizer:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: cognito_user_pools
      x-amazon-apigateway-authorizer:
        type: cognito_user_pools
        providerARNs:
          - >-
            arn:aws:cognito-idp:#{AWS::Region}:#{AWS::AccountId}:userpool/ap-northeast-1_bu4N4f42H
        identityValidationExpression: .*
tags:
  - name: Center
    description: 保健所に関するモデル
  - name: Observer
    description: 観察者（保健師など）に関するモデル
  - name: Patient
    description: 療養者に関するモデル
  - name: Status
    description: 症状報告に関するモデル
  - name: CORS
    description: Cross-Origin Resource Sharing 設定
